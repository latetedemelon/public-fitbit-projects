{
  "__inputs": [
    {
      "name": "DS_prometheus ",
      "label": "prometheus ",
      "description": "",
      "type": "datasource",
      "pluginId": "prometheus ",
      "pluginName": "prometheus "
    }
  ],
  "__elements": {},
  "__requires": [
    {
      "type": "panel",
      "id": "barchart",
      "name": "Bar chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "gauge",
      "name": "Gauge",
      "version": ""
    },
    {
      "type": "grafana",
      "id": "grafana",
      "name": "Grafana",
      "version": "10.4.1"
    },
    {
      "type": "datasource",
      "id": "prometheus ",
      "name": "prometheus ",
      "version": "1.0.0"
    },
    {
      "type": "panel",
      "id": "marcusolsson-hourly-heatmap-panel",
      "name": "Hourly heatmap",
      "version": "2.0.1"
    },
    {
      "type": "panel",
      "id": "piechart",
      "name": "Pie chart",
      "version": ""
    },
    {
      "type": "panel",
      "id": "stat",
      "name": "Stat",
      "version": ""
    },
    {
      "type": "panel",
      "id": "state-timeline",
      "name": "State timeline",
      "version": ""
    },
    {
      "type": "panel",
      "id": "table",
      "name": "Table",
      "version": ""
    },
    {
      "type": "panel",
      "id": "timeseries",
      "name": "Time series",
      "version": ""
    }
  ],
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": null,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 54,
      "panels": [],
      "title": "Recent Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "Battery remaining",
          "mappings": [],
          "max": 100,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "semi-dark-red",
                "value": null
              },
              {
                "color": "semi-dark-red",
                "value": 0
              },
              {
                "color": "semi-dark-red",
                "value": 25
              },
              {
                "color": "semi-dark-orange",
                "value": 35
              },
              {
                "color": "semi-dark-yellow",
                "value": 55
              },
              {
                "color": "semi-dark-green",
                "value": 75
              },
              {
                "color": "semi-dark-blue",
                "value": 85
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 1
      },
      "hideTimeOverride": true,
      "id": 59,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showPercentChange": false,
        "textMode": "value",
        "wideLayout": true
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "Battery remaining",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [],
          "measurement": "DeviceBatteryLevel",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> yield(name: \"value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> yield(name: \"value\")"
        }
      ],
      "timeFrom": "6h",
      "title": "Device Battery Level",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "fixedColor": "text",
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "bars",
            "fillOpacity": 34,
            "gradientMode": "scheme",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 5,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 90
              },
              {
                "color": "red",
                "value": 120
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 21,
        "x": 3,
        "y": 1
      },
      "id": 61,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "Heart rate",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "heartrate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "avg_over_time(HeartRate_Intraday[$__range])",
          "queryType": "randomWalk",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "6"
                ],
                "type": "moving_average"
              }
            ]
          ],
          "tags": [],
          "expr": "avg_over_time(HeartRate_Intraday[$__range])"
        }
      ],
      "timeFrom": "24h",
      "title": "Heart Rate",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "Resting HR",
          "mappings": [],
          "max": 100,
          "min": 40,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-blue",
                "value": null
              },
              {
                "color": "semi-dark-green",
                "value": 60
              },
              {
                "color": "semi-dark-yellow",
                "value": 70
              },
              {
                "color": "semi-dark-red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 7
      },
      "id": 27,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto",
        "text": {}
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [],
          "measurement": "RestingHR",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from( bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"RestingHR\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> yield(name: \"value\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from( bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"RestingHR\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> yield(name: \"value\")"
        }
      ],
      "title": "RHR",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 1,
            "drawStyle": "bars",
            "fillOpacity": 100,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineWidth": 0,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "never",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Heart rate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 6,
        "w": 21,
        "x": 3,
        "y": 11
      },
      "hideTimeOverride": false,
      "id": 3,
      "options": {
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "alias": "Steps",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "heartrate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Steps_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> movingAverage(n: 6)\n  |> yield(name: \"mean\")",
          "queryType": "randomWalk",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              },
              {
                "params": [
                  "6"
                ],
                "type": "moving_average"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Steps_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> movingAverage(n: 6)\n  |> yield(name: \"mean\")"
        }
      ],
      "timeFrom": "24h",
      "title": "Hourly Steps",
      "transparent": true,
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "Steps \ud83d\udc5f",
          "mappings": [],
          "max": 15000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-red",
                "value": null
              },
              {
                "color": "light-orange",
                "value": 5000
              },
              {
                "color": "semi-dark-green",
                "value": 10000
              },
              {
                "color": "semi-dark-blue",
                "value": 13000
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 3,
        "x": 0,
        "y": 13
      },
      "id": 30,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto",
        "text": {}
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "0"
              ],
              "type": "fill"
            }
          ],
          "measurement": "Steps_Intraday",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total Steps\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Total Steps\")\n  |> avg_over_time(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")"
        }
      ],
      "title": "Today's Steps",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Resting HR",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "axisSoftMin": 90,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": 60000,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 100,
          "min": 80,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Resting HR"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "restingHeartRate.distinct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Breathing Rate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SpO2"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SpO2 Intraday"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 21,
        "x": 3,
        "y": 17
      },
      "id": 36,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "SpO2 Intraday",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "5m"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "SPO2_Intraday",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"
        }
      ],
      "timeFrom": "24h",
      "title": "Spo2 Today",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "SpO2 %",
          "mappings": [],
          "max": 100,
          "min": 40,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-red",
                "value": null
              },
              {
                "color": "semi-dark-orange",
                "value": 85
              },
              {
                "color": "semi-dark-yellow",
                "value": 90
              },
              {
                "color": "semi-dark-green",
                "value": 95
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 3,
        "x": 0,
        "y": 19
      },
      "id": 37,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto",
        "text": {}
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "SpO2",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            }
          ],
          "measurement": "SPO2",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> last()",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "avg"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2_Intraday\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> last()"
        }
      ],
      "title": "SpO2",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-blues"
          },
          "custom": {
            "fillOpacity": 100,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "index": 10,
                  "text": "Deep"
                },
                "1": {
                  "index": 9,
                  "text": "Light"
                },
                "2": {
                  "index": 8,
                  "text": "REM"
                },
                "3": {
                  "index": 7,
                  "text": "Awake"
                },
                "Awake": {
                  "color": "semi-dark-purple",
                  "index": 5
                },
                "Deep": {
                  "color": "#3274D9",
                  "index": 4
                },
                "Light": {
                  "color": "light-blue",
                  "index": 3
                },
                "N/A": {
                  "color": "#CCC",
                  "index": 6
                },
                "REM": {
                  "color": "#C0D8FF",
                  "index": 2
                },
                "null": {
                  "index": 1,
                  "text": "N/A"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "result": {
                  "index": 0,
                  "text": "N/A"
                }
              },
              "type": "range"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 21,
        "x": 3,
        "y": 24
      },
      "hideTimeOverride": false,
      "id": 40,
      "options": {
        "alignValue": "center",
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": false
        },
        "mergeValues": true,
        "rowHeight": 1,
        "showValue": "auto",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Sleep levels",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "Sleep Levels",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> filter(fn: (r) => r[\"isMainSleep\"] == \"True\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Night\" }))",
          "queryType": "randomWalk",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "level"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [
            {
              "key": "isMainSleep",
              "operator": "=",
              "value": "True"
            }
          ],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> filter(fn: (r) => r[\"isMainSleep\"] == \"True\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Night\" }))"
        }
      ],
      "timeFrom": "24h",
      "timeShift": "0h",
      "title": "Sleep Pattern",
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "displayName": "of sleep",
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              },
              {
                "color": "semi-dark-red",
                "value": 120
              },
              {
                "color": "semi-dark-orange",
                "value": 240
              },
              {
                "color": "semi-dark-yellow",
                "value": 360
              },
              {
                "color": "semi-dark-green",
                "value": 420
              }
            ]
          },
          "unit": "m"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 3,
        "x": 0,
        "y": 26
      },
      "id": 50,
      "options": {
        "minVizHeight": 75,
        "minVizWidth": 75,
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "last"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true,
        "sizing": "auto"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "Total Asleep",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesAsleep"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone"
        }
      ],
      "title": "Last Day Total Sleep",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "series",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 11,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "stepBefore",
            "lineStyle": {
              "fill": "solid"
            },
            "lineWidth": 2,
            "pointSize": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 4,
          "min": -1,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 4
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 6,
        "w": 21,
        "x": 3,
        "y": 28
      },
      "id": 39,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Sleep levels",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "20s"
              ],
              "type": "time"
            },
            {
              "params": [
                "previous"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Levels",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> filter(fn: (r) => r[\"isMainSleep\"] == \"True\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Levels\" }))",
          "queryType": "randomWalk",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "level"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "last"
              }
            ]
          ],
          "tags": [
            {
              "key": "isMainSleep",
              "operator": "=",
              "value": "True"
            }
          ],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> filter(fn: (r) => r[\"isMainSleep\"] == \"True\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Levels\" }))"
        }
      ],
      "timeFrom": "24h",
      "title": "Sleep Pattern",
      "type": "timeseries"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 35
      },
      "id": 52,
      "panels": [],
      "title": "Sleep Data - Long Term",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Deep"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Light"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "REM"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Awake"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 11,
        "x": 0,
        "y": 36
      },
      "id": 44,
      "options": {
        "barRadius": 0.25,
        "barWidth": 0.4,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "Deep",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesDeep\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Deep\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")\n",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesDeep"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesDeep\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Deep\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")\n"
        },
        {
          "alias": "Light",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesLight\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Light\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesLight"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesLight\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Light\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        },
        {
          "alias": "REM",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesREM\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"REM\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesREM"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesREM\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"REM\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        },
        {
          "alias": "Awake",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesAwake\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Awake\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesAwake"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesAwake\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Awake\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Sleep",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 0,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 7,
        "x": 11,
        "y": 36
      },
      "id": 45,
      "options": {
        "barRadius": 0.25,
        "barWidth": 0.58,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 90,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "alias": "Efficiency",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"efficiency\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Efficiency\" }))\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "efficiency"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"efficiency\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Efficiency\" }))\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Sleep Efficiency",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": true,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 1.8,
            "axisSoftMin": -1.5,
            "fillOpacity": 80,
            "gradientMode": "hue",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "decimals": 1,
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "light-blue",
                "value": null
              },
              {
                "color": "light-green",
                "value": 0.5
              },
              {
                "color": "semi-dark-green",
                "value": 0.8
              },
              {
                "color": "semi-dark-yellow",
                "value": 1
              },
              {
                "color": "semi-dark-orange",
                "value": 1.5
              },
              {
                "color": "semi-dark-red",
                "value": 2
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 6,
        "x": 18,
        "y": 36
      },
      "id": 63,
      "options": {
        "barRadius": 0,
        "barWidth": 0.87,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "Time",
        "xTickLabelRotation": -90,
        "xTickLabelSpacing": 100
      },
      "targets": [
        {
          "alias": "Relative Skin Temp ",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [],
          "hide": false,
          "measurement": "Skin Temperature Variation",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Skin Temperature Variation\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Skin \u00b0 Variation\"}))\n  |> yield(name: \"median\")",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "RelativeValue"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Skin Temperature Variation\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Skin \u00b0 Variation\"}))\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Relative Skin Temperature",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            }
          },
          "mappings": [],
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Deep"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "REM"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Light"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "super-light-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Awake"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 46
      },
      "id": 48,
      "options": {
        "legend": {
          "displayMode": "table",
          "placement": "right",
          "showLegend": true,
          "values": [
            "percent",
            "value"
          ]
        },
        "pieType": "donut",
        "reduceOptions": {
          "calcs": [
            "mean"
          ],
          "fields": "",
          "values": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "alias": "Deep",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesDeep\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Deep\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "F",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesDeep"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesDeep\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Deep\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        },
        {
          "alias": "Light",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesAwake\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Awake\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesLight"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesAwake\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Awake\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        },
        {
          "alias": "REM",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesLight\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Light\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesREM"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesLight\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Light\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        },
        {
          "alias": "Awake",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1d"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Sleep Summary",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesREM\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"REM\" }))\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "rawQuery": false,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesAwake"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Summary\")\n  |> filter(fn: (r) => r[\"_field\"] == \"minutesREM\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"REM\" }))\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Average Sleep trends",
      "type": "piechart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "custom": {
            "calculation": "mean",
            "colorPalette": "interpolateSpectral",
            "colorSpace": "rgb",
            "groupBy": 60,
            "invertPalette": false,
            "nullValueColor": "rgb(155, 155, 155)"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 46
      },
      "id": 42,
      "options": {
        "from": "0",
        "legendGradientQuality": "high",
        "showCellBorder": false,
        "showLegend": true,
        "showTooltip": true,
        "showValueIndicator": false,
        "to": "0"
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "alias": "Sleep Regularity",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1h"
              ],
              "type": "time"
            }
          ],
          "hide": false,
          "measurement": "Sleep Levels",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> aggregateWindow(every: 1h, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "queryType": "randomWalk",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "level"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "median"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Sleep Levels\")\n  |> filter(fn: (r) => r[\"_field\"] == \"level\")\n  |> avg_over_time(every: 1h, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"
        }
      ],
      "title": "Sleep Regularity",
      "transparent": true,
      "type": "marcusolsson-hourly-heatmap-panel"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 55
      },
      "id": 56,
      "panels": [],
      "title": "Other Long Term Data",
      "type": "row"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Resting HR",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 70,
            "axisSoftMin": 50,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Resting HR"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "restingHeartRate.distinct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 56
      },
      "id": 32,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Resting HR",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "RestingHR",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"RestingHR\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Resting HR\"}))\n  |> aggregateWindow(every: 1h, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"RestingHR\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Resting HR\"}))\n  |> avg_over_time(every: 1h, fn: last, createEmpty: false)\n  |> yield(name: \"last\")"
        }
      ],
      "title": "Resting HR",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Resting HR",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "normal"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 56
      },
      "id": 35,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "DailyRmssd",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "HRV",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HRV\")\n  |> aggregateWindow(every: 1h, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field: ( if r[\"_field\"] == \"dailyRmssd\" then \"Daily\" else \"Deep\")}))\n  |> yield(name: \"last\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "dailyRmssd"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HRV\")\n  |> avg_over_time(every: 1h, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field: ( if r[\"_field\"] == \"dailyRmssd\" then \"Daily\" else \"Deep\")}))\n  |> yield(name: \"last\")"
        }
      ],
      "title": "HRV",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Resting HR",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 100,
            "axisSoftMin": 88,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Resting HR"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "restingHeartRate.distinct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Breathing Rate"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "SpO2"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 0,
        "y": 65
      },
      "id": 7,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "SpO2",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "SPO2",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2\")\n  |> filter(fn: (r) => r[\"_field\"] == \"avg\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"SPO2\"}))\n  |> yield(name: \"last\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "avg"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"SPO2\")\n  |> filter(fn: (r) => r[\"_field\"] == \"avg\")\n  |> avg_over_time(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"SPO2\"}))\n  |> yield(name: \"last\")"
        }
      ],
      "title": "Spo2 ( Avg )",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Resting HR",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "axisSoftMax": 18,
            "axisSoftMin": 10,
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "graph": false,
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 1,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Resting HR"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-yellow",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "restingHeartRate.distinct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 12,
        "x": 12,
        "y": 65
      },
      "id": 5,
      "options": {
        "graph": {},
        "legend": {
          "calcs": [
            "mean",
            "max",
            "min"
          ],
          "displayMode": "table",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Breathing Rate",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "BreathingRate",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"BreathingRate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Breathing Rate\"}))\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"BreathingRate\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Breathing Rate\"}))\n  |> avg_over_time(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> yield(name: \"last\")"
        }
      ],
      "title": "Breathing Rate",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Mixed --"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "custom": {
            "calculation": "mean",
            "colorPalette": "interpolateSpectral",
            "colorSpace": "rgb",
            "groupBy": 60,
            "invertPalette": false,
            "nullValueColor": "rgb(155, 155, 155)"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 72
      },
      "id": 29,
      "options": {
        "from": "5",
        "legendGradientQuality": "low",
        "showCellBorder": false,
        "showLegend": true,
        "showTooltip": true,
        "showValueIndicator": true,
        "to": "22"
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "alias": "Hourly walk heatmap",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "1h"
              ],
              "type": "time"
            },
            {
              "params": [
                "0"
              ],
              "type": "fill"
            }
          ],
          "measurement": "Steps_Intraday",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"ActivityName\"] == \"Walk\")\n  |> filter(fn: (r) => r[\"_field\"] == \"steps\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "sum"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"ActivityName\"] == \"Walk\")\n  |> filter(fn: (r) => r[\"_field\"] == \"steps\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Hourly walk heatmap",
      "transformations": [
        {
          "id": "merge",
          "options": {}
        }
      ],
      "transparent": true,
      "type": "marcusolsson-hourly-heatmap-panel"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "Steps"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 72
      },
      "id": 17,
      "options": {
        "barRadius": 0.15,
        "barWidth": 0.44,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "Time",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [],
          "measurement": "Total Steps",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"steps\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field: r.ActivityName}))\n  |> aggregateWindow(every: 1d, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
          "queryType": "randomWalk",
          "rawQuery": false,
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"steps\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field: r.ActivityName}))\n  |> avg_over_time(every: 1d, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")"
        }
      ],
      "title": "Activities (Steps)",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "dtdurationms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Intense Activity"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 0,
        "y": 81
      },
      "id": 13,
      "options": {
        "barRadius": 0,
        "barWidth": 0.49,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "never",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "9.3.2",
      "targets": [
        {
          "alias": "Light Activity",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Activity Minutes",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"duration\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r.ActivityName}))\n  |> aggregateWindow(every: 1d, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesLightlyActive"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"duration\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r.ActivityName}))\n  |> avg_over_time(every: 1d, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")"
        },
        {
          "alias": "Fair Activity",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "Activity Minutes",
          "orderByTime": "ASC",
          "policy": "default",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesFairlyActive"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Intense Activity",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "measurement": "Activity Minutes",
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "minutesVeryActive"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Activities (Duration)",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          }
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 12,
        "x": 12,
        "y": 81
      },
      "id": 15,
      "options": {
        "barRadius": 0.3,
        "barWidth": 0.51,
        "fullHighlight": false,
        "groupWidth": 1,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "Time",
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "hide": false,
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HR zones\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Normal\" or r[\"_field\"] == \"Peak\" or r[\"_field\"] == \"Fat Burn\" or r[\"_field\"] == \"Cardio\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r[\"_field\"]}))\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "refId": "A",
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"HR zones\")\n  |> filter(fn: (r) => r[\"_field\"] == \"Normal\" or r[\"_field\"] == \"Peak\" or r[\"_field\"] == \"Fat Burn\" or r[\"_field\"] == \"Cardio\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r[\"_field\"]}))\n  |> avg_over_time(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"
        }
      ],
      "title": "HR Zones",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "Represent the level of activity in the day",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "m"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Sedentary"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-red",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Fairly"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "light-orange",
                  "mode": "shades"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "Very"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "green",
                  "mode": "shades"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 10,
        "x": 0,
        "y": 91
      },
      "id": 65,
      "options": {
        "barRadius": 0,
        "barWidth": 0.97,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "normal",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xField": "_time",
        "xTickLabelRotation": 0,
        "xTickLabelSpacing": 0
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "query": "import \"date\"\nfrom(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"Activity Minutes\")\n  |> filter(fn: (r) => r._field == \"minutesFairlyActive\" or r._field == \"minutesLightlyActive\" or r._field == \"minutesSedentary\" or r._field == \"minutesVeryActive\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({\n      _time: r._time,\n      Sedentary: r.minutesSedentary,\n      Light: r.minutesLightlyActive,\n      Fairly: r.minutesFairlyActive,\n      Very: r.minutesVeryActive\n  }))\n  |> yield(name: \"orderedMedian\")",
          "refId": "A",
          "expr": "import \"date\"\nfrom(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"Activity Minutes\")\n  |> filter(fn: (r) => r._field == \"minutesFairlyActive\" or r._field == \"minutesLightlyActive\" or r._field == \"minutesSedentary\" or r._field == \"minutesVeryActive\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> pivot(rowKey:[\"_time\"], columnKey: [\"_field\"], valueColumn: \"_value\")\n  |> map(fn: (r) => ({\n      _time: r._time,\n      Sedentary: r.minutesSedentary,\n      Light: r.minutesLightlyActive,\n      Fairly: r.minutesFairlyActive,\n      Very: r.minutesVeryActive\n  }))\n  |> yield(name: \"orderedMedian\")"
        }
      ],
      "title": "Activities Minutes",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "lengthkm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 10,
        "y": 91
      },
      "id": 23,
      "options": {
        "barRadius": 0,
        "barWidth": 0.4,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": -45,
        "xTickLabelSpacing": 100
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "alias": "Total Distance",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "distance",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"distance\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n    |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Distance\"}))\n  |> yield(name: \"median\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"distance\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n    |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Distance\"}))\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Distance",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "fillOpacity": 80,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineWidth": 1,
            "scaleDistribution": {
              "type": "linear"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "kCal"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Total Calories"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-red",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 8,
        "w": 7,
        "x": 17,
        "y": 91
      },
      "id": 21,
      "options": {
        "barRadius": 0.15,
        "barWidth": 0.41,
        "fullHighlight": false,
        "groupWidth": 0.7,
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "orientation": "auto",
        "showValue": "auto",
        "stacking": "none",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        },
        "xTickLabelRotation": 90,
        "xTickLabelSpacing": 200
      },
      "pluginVersion": "10.4.0",
      "targets": [
        {
          "alias": "Total Calories",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "calories",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"calories\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Calories\"}))\n  |> yield(name: \"median\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "tz": "$TimeZone",
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"calories\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: median, createEmpty: false)\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:\"Calories\"}))\n  |> yield(name: \"median\")"
        }
      ],
      "title": "Calories",
      "type": "barchart"
    },
    {
      "datasource": {
        "type": "datasource",
        "uid": "-- Dashboard --"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-reds"
          },
          "custom": {
            "fillOpacity": 100,
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineWidth": 0,
            "spanNulls": false
          },
          "mappings": [
            {
              "options": {
                "0": {
                  "text": "Off Hand"
                },
                "Off Hand": {
                  "color": "#E02F44"
                },
                "On Hand": {
                  "color": "#96D98D"
                }
              },
              "type": "value"
            },
            {
              "options": {
                "from": 1,
                "result": {
                  "text": "On Hand"
                },
                "to": 300
              },
              "type": "range"
            }
          ],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 99
      },
      "id": 9,
      "options": {
        "alignValue": "left",
        "legend": {
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "mergeValues": true,
        "rowHeight": 0.9,
        "showValue": "never",
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "7.5.2",
      "targets": [
        {
          "datasource": {
            "type": "datasource",
            "uid": "-- Dashboard --"
          },
          "panelId": 61,
          "refId": "A"
        }
      ],
      "title": "Band wearing ",
      "transparent": true,
      "type": "state-timeline"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "custom": {
            "align": "center",
            "cellOptions": {
              "mode": "basic",
              "type": "gauge"
            },
            "filterable": true,
            "inspect": false
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "semi-dark-blue",
                "value": null
              },
              {
                "color": "semi-dark-green",
                "value": 180000
              },
              {
                "color": "semi-dark-green",
                "value": 540000
              },
              {
                "color": "semi-dark-orange",
                "value": 900000
              },
              {
                "color": "semi-dark-red",
                "value": 1800000
              }
            ]
          },
          "unit": "ms"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Time"
            },
            "properties": [
              {
                "id": "custom.cellOptions",
                "value": {
                  "type": "color-text"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 103
      },
      "id": 34,
      "options": {
        "cellHeight": "sm",
        "footer": {
          "countRows": false,
          "enablePagination": true,
          "fields": "",
          "reducer": [
            "sum"
          ],
          "show": true
        },
        "frameIndex": 0,
        "showHeader": true,
        "sortBy": [
          {
            "desc": true,
            "displayName": "Time"
          }
        ]
      },
      "pluginVersion": "10.4.1",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "query": "from(bucket: \"tower\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"duration\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r.ActivityName}))\n  |> aggregateWindow(every: 1h, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")",
          "refId": "A",
          "expr": "from(bucket: \"tower\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"Activity Records\")\n  |> filter(fn: (r) => r[\"_field\"] == \"duration\")\n  |> map(fn: (r) => ({ _value:r._value, _time:r._time, _field:r.ActivityName}))\n  |> avg_over_time(every: 1h, fn: sum, createEmpty: false)\n  |> yield(name: \"sum\")"
        }
      ],
      "timeFrom": "1w",
      "title": "Recent Activity",
      "transformations": [
        {
          "id": "joinByField",
          "options": {
            "byField": "Time",
            "mode": "outer"
          }
        }
      ],
      "type": "table"
    },
    {
      "alert": {
        "alertRuleTags": {},
        "conditions": [
          {
            "evaluator": {
              "params": [
                25
              ],
              "type": "lt"
            },
            "operator": {
              "type": "and"
            },
            "query": {
              "params": [
                "A",
                "5m",
                "now"
              ]
            },
            "reducer": {
              "params": [],
              "type": "avg"
            },
            "type": "query"
          }
        ],
        "executionErrorState": "keep_state",
        "for": "5m",
        "frequency": "1m",
        "handler": 1,
        "message": "Device Battery Low",
        "name": "Charge 4 Battery Level alert",
        "noDataState": "keep_state",
        "notifications": [
          {
            "uid": "6172dkrMz"
          }
        ]
      },
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 41,
            "gradientMode": "opacity",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "smooth",
            "lineStyle": {
              "dash": [
                0,
                3,
                3
              ],
              "fill": "dot"
            },
            "lineWidth": 2,
            "pointSize": 6,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "line+area"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "transparent",
                "value": 25
              }
            ]
          },
          "unit": "short"
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "Battery Percentage"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "semi-dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "deviceBatteryLevel.distinct"
            },
            "properties": [
              {
                "id": "color",
                "value": {
                  "fixedColor": "dark-blue",
                  "mode": "fixed"
                }
              }
            ]
          }
        ]
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 114
      },
      "id": 19,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.0.5",
      "targets": [
        {
          "alias": "Battery Percentage",
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "measurement": "DeviceBatteryLevel",
          "orderByTime": "ASC",
          "policy": "default",
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")",
          "queryType": "randomWalk",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "distinct"
              }
            ]
          ],
          "tags": [],
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r[\"_field\"] == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: mean, createEmpty: false)\n  |> yield(name: \"mean\")"
        }
      ],
      "title": "Battery Level",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "prometheus",
        "uid": "${DS_PROMETHEUS}"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds",
            "seriesBy": "last"
          },
          "custom": {
            "axisBorderShow": false,
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 0,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "insertNulls": false,
            "lineInterpolation": "linear",
            "lineStyle": {
              "dash": [
                0,
                10
              ],
              "fill": "dot"
            },
            "lineWidth": 2,
            "pointSize": 4,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": true,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "max": 1,
          "min": -2,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "text",
                "value": null
              },
              {
                "color": "dark-red",
                "value": -10
              },
              {
                "color": "green",
                "value": 0
              }
            ]
          },
          "unit": "short"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 7,
        "w": 24,
        "x": 0,
        "y": 121
      },
      "id": 64,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": true
        },
        "tooltip": {
          "mode": "multi",
          "sort": "none"
        }
      },
      "pluginVersion": "9.0.5",
      "targets": [
        {
          "datasource": {
            "type": "prometheus ",
            "uid": "${DS_prometheus }"
          },
          "query": "from(bucket: \"${bucket}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> aggregateWindow(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> derivative(unit: 15m, nonNegative: false, columns: [\"_value\"], timeColumn: \"_time\")\n  |> yield(name: \"rateOfChange\")\n",
          "refId": "A",
          "expr": "from(bucket: \"${bucket}\")\n  [$__range](start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r._measurement == \"DeviceBatteryLevel\")\n  |> filter(fn: (r) => r._field == \"value\")\n  |> avg_over_time(every: v.windowPeriod, fn: last, createEmpty: false)\n  |> derivative(unit: 15m, nonNegative: false, columns: [\"_value\"], timeColumn: \"_time\")\n  |> yield(name: \"rateOfChange\")\n"
        }
      ],
      "title": "Battery usage rate [ d(battery level)/dt ]",
      "type": "timeseries"
    }
  ],
  "refresh": "",
  "schemaVersion": 39,
  "tags": [],
  "templating": {
    "list": [
      {
        "current": {},
        "datasource": {
          "type": "prometheus ",
          "uid": "${DS_prometheus }"
        },
        "definition": "buckets()\n|> map(fn: (r) => ({ \"text\": r.name, \"value\": r.name}))",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "bucket",
        "options": [],
        "query": "buckets()\n|> map(fn: (r) => ({ \"text\": r.name, \"value\": r.name}))",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      },
      {
        "current": {
          "selected": true,
          "text": "America/Toronto",
          "value": "America/Toronto"
        },
        "description": "Determines the time zone for grouping by day",
        "hide": 0,
        "includeAll": false,
        "label": "Time Zone",
        "multi": false,
        "name": "TimeZone",
        "options": [
          {
            "selected": true,
            "text": "America/Toronto",
            "value": "America/Toronto"
          },
          {
            "selected": false,
            "text": "Asia/Kolkata",
            "value": "Asia/Kolkata"
          },
          {
            "selected": false,
            "text": "Europe/Berlin",
            "value": "Europe/Berlin"
          }
        ],
        "query": "America/Toronto, Asia/Kolkata, Europe/Berlin,",
        "queryValue": "",
        "skipUrlSync": false,
        "type": "custom"
      }
    ]
  },
  "time": {
    "from": "now-2d",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "browser",
  "title": "Health Stats",
  "uid": "_cl7FMC4z",
  "version": 15,
  "weekStart": ""
}
